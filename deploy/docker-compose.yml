version: '3.8'

networks:
  dev:
    driver: bridge

services:
  nginx:
    image: nginx:stable-alpine
    restart: always
    container_name: ngnix
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./dhparam:/etc/ssl/certs
    networks:
      - dev

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email zaharpatrakov67@gmail.com --agree-tos --no-eff-email --force-renewal -d hearthguess.ru -d www.hearthguess.ru

  app:
    env_file: "docker-compose.env"
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: .
    container_name: app
    ports:
      - "8080:8080"
    depends_on:
      - db
      - nginx
    environment:
      - SPRING_DATASOURCE_AUTH_URL=${AUTH_URL}
      - SPRING_DATASOURCE_AUTH_USERNAME=${AUTH_USERNAME}
      - SPRING_DATASOURCE_AUTH_PASSWORD=${AUTH_PASSWORD}
      - SPRING_DATASOURCE_CARDS_URL=${CARDS_URL}
      - SPRING_DATASOURCE_CARDS_USERNAME=${CARDS_USERNAME}
      - SPRING_DATASOURCE_CARDS_PASSWORD=${CARDS_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - dev

  db:
    env_file: "docker-compose.env"
    image: 'postgres:16.4-alpine'
    ports:
      - "5432:5432"
    container_name: db
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=GuessHearthAuth,Cards
    networks:
      - dev

volumes:
  certbot-etc:
  certbot-var:
  web-root:
